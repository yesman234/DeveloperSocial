{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","store.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","console","log","required","minLength","alerts","alert","length","map","key","src","spinner","style","width","margin","display","alt","DashboardAction","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","moment","utc","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","DashboardActions","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","initialState","profileData","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","descritption","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","nullProfile","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","currentState","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Dashboard","CreateProfile","EditProfile","Profiles","Profile","AddExperience","AddEducation","Posts","Post","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","previousState","getState","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9756abd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.cb521b1a.gif\";","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\n","// function that takes in  token if its there than add it to the headers else delete from headers\r\n\r\nimport axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//load User\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//logout / clear profile\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{\" \"}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-code\" /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Dev Social</h1>\r\n          <p className=\"lead\">\r\n            Create developer profile/portoflio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign-Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\"\r\n  });\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>\r\n        Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar, so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account?<Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n    console.log(\"SUCCESS\");\r\n  };\r\n  //Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>\r\n        Sign Into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account?<Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardAction = () => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"edit-profile\" className=\"btn\">\r\n        <i className=\"fas fa-user-circle text-primary\"></i>\r\n        Edit Profile\r\n      </Link>\r\n      <Link to=\"add-experience\" className=\"btn\">\r\n        <i className=\"fab fa-black-tie text-primary\"></i>\r\n        Add Experience\r\n      </Link>\r\n      <Link to=\"add-education\" className=\"btn\">\r\n        <i className=\"fas fa-graduation-cap text-primary\"></i>\r\n        Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardAction;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS\r\n} from \"./types\";\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map(exp => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.from)}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map(edu => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.from)}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\" /> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst CreateProfile = ({\r\n  createProfile,\r\n  getCurrentProfile,\r\n  profile: { profile, loading },\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\"\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Redirect to=\"/dashboard\" />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(CreateProfile)\r\n);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n  company: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  status: \"\",\r\n  skills: \"\",\r\n  githubusername: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  youtube: \"\",\r\n  instagram: \"\"\r\n};\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"text-primary\">\r\n            <i className=\"fas fa-check\" /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-linkedin fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => (\r\n  <div className=\"profile-about bg-light p-2\">\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className=\"line\"></div>\r\n      </Fragment>\r\n    )}\r\n\r\n    <h2 className=\"text-primary\">Skill Set</h2>\r\n    <div className=\"skills\">\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"p-1\">\r\n          <i className=\"fas fa-check\"></i>\r\n          {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, descritption }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-dark\">{company}</h3>\r\n      <p>\r\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment>-\r\n        {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong> {title}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong> {descritption}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{\" \"}\r\n      {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  const nullProfile = !profile;\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id, nullProfile]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-up\" />{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-down\" />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\nlet currentState;\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage\r\n  if (previousState && previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    token\r\n      ? localStorage.setItem(\"token\", token)\r\n      : localStorage.removeItem(\"token\");\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"./types\";\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/posts\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Added\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\nimport { getPosts } from \"../../actions/post\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Comment the post\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\nimport CommentItem from \"../post/CommentItem\";\r\nimport { getPost } from \"../../actions/post\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"x-large text-primary\">\r\n        <i className=\"fas fa-exclamation-triangle\"></i>Page Not Found\r\n      </h1>\r\n      <p className=\"large\">Sorry Page does not exists</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport CreateProfile from \"../profile-form/CreateProfile\";\r\nimport EditProfile from \"../profile-form/EditProfile\";\r\nimport AddExperience from \"../profile-form/AddExperience\";\r\nimport AddEducation from \"../profile-form/AddEducation\";\r\nimport Profiles from \"../profiles/Profiles\";\r\nimport Profile from \"../profile/Profile\";\r\nimport Posts from \"../posts/Posts\";\r\nimport Post from \"../post/Post\";\r\nimport NotFound from \"../layout/NotFound\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n        <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n        <Route exact path=\"/profiles\" component={Profiles} />\r\n        <Route exact path=\"/profile/:id\" component={Profile} />\r\n\r\n        <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\r\n        <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n        <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n        <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  //REGISTER_FAIL,\r\n  USER_LOADED,\r\n  //AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  //LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            comment => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\nexport default combineReducers({ alert, auth, profile, post });\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Routes from \"./components/routing/Routes\";\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n      store.dispatch(loadUser());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}